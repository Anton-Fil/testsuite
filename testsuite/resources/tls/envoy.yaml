apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: envoy-tls-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${LABEL}
      svc: envoy
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${LABEL}
        svc: envoy
    template:
      metadata:
        labels:
          app: ${LABEL}
          svc: envoy
      spec:
        containers:
        - args:
          - --config-path /usr/local/etc/envoy/envoy.yaml
          - --service-cluster front-proxy
          - --log-level info
          - --component-log-level filter:trace,http:debug,router:debug
          command:
          - /usr/local/bin/envoy
          image: ${ENVOY_IMAGE}
          readinessProbe:
            httpGet:
              path: /ready
              port: 8001
            initialDelaySeconds: 3
            periodSeconds: 4
          name: envoy
          ports:
          - containerPort: 8000
            name: web
          - containerPort: 8001
            name: admin
          volumeMounts:
          - mountPath: /usr/local/etc/envoy
            name: config
            readOnly: true
          - mountPath: /etc/ssl/certs/authorino
            name: authorino-ca
          - mountPath: /etc/ssl/certs/envoy
            name: envoy
          - mountPath: /etc/ssl/certs/envoy-ca
            name: envoy-ca
        volumes:
        - configMap:
            items:
            - key: envoy.yaml
              path: envoy.yaml
            name: ${NAME}
          name: config
        - name: authorino-ca
          secret:
            readOnly: true
            secretName: ${AUTHORINO_CA_SECRET}
        - name: envoy-ca
          secret:
            readOnly: true
            secretName: ${ENVOY_CA_SECRET}
        - name: envoy
          secret:
            readOnly: true
            secretName: ${ENVOY_CERT_SECRET}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${LABEL}
    name: ${NAME}
  spec:
    ports:
    - name: api
      port: 8000
      protocol: TCP
    selector:
      app: ${LABEL}
      svc: envoy
parameters:
- name: NAME
  description: "Name for the resources created"
  required: true
- name: LABEL
  description: "App label for all resources"
  required: true
- name: ENVOY_CERT_SECRET
  description: "Secret containing certificate for envoy"
  required: true
- name: ENVOY_CA_SECRET
  description: "Secret containing top-level CA for envoy"
  required: true
- name: AUTHORINO_CA_SECRET
  description: "Secret containing CA for communication with Authorino, only public cert is required"
  required: true
- name: ENVOY_IMAGE
  required: true
